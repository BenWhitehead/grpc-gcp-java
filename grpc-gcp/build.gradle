plugins {
    id 'java'
    id 'maven'
    id 'maven-publish'
    id 'com.google.protobuf' version '0.8.10'
    id 'com.github.sherter.google-java-format' version '0.8'
}

repositories {
    mavenLocal()
    maven { // The google mirror is less flaky than mavenCentral()
        url "https://maven-central.storage-download.googleapis.com/repos/central/data/"
    }
}

group = 'com.google.cloud'
version = '0.0.1-SNAPSHOT'
description = 'GRPC-GCP-Extension Java'
sourceCompatibility = '1.8'

def grpcVersion = '1.21.1'
def protobufVersion = '3.8.0'
def protocVersion = '3.5.1-1'

dependencies {
    compile "io.grpc:grpc-api:${grpcVersion}"
    compile "io.grpc:grpc-netty-shaded:${grpcVersion}"
    compile "com.google.protobuf:protobuf-java:${protobufVersion}"
    compile "com.google.protobuf:protobuf-java-util:${protobufVersion}"

    testCompile "com.google.auth:google-auth-library-credentials:0.13.0"
    testCompile "com.google.api.grpc:proto-google-cloud-spanner-v1:0.36.0"
    testCompile "com.google.api.grpc:grpc-google-cloud-spanner-v1:0.36.0"
    testCompile "com.google.api.grpc:proto-google-cloud-bigtable-v2:0.39.0"
    testCompile "com.google.api.grpc:grpc-google-cloud-bigtable-v2:0.39.0"
    testCompile "com.google.auth:google-auth-library-oauth2-http:0.9.0"
    testCompile "io.grpc:grpc-auth:${grpcVersion}"
    testCompile "io.grpc:grpc-stub:${grpcVersion}"
    testCompile "com.google.truth:truth:0.42"
    testCompile "junit:junit:4.12"
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
    benchmarkTest {
        java.srcDir file('src/benchmarkTest/java')
        resources.srcDir file('src/benchmarkTest/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
        runtimeClasspath += output + compileClasspath
    }
}

task bigtableLoadTest(type: JavaExec) {
    classpath = sourceSets.benchmarkTest.runtimeClasspath
    main = 'BigtableLoadTest'
}

task spannerLoadTest(type: JavaExec) {
    classpath = sourceSets.benchmarkTest.runtimeClasspath
    main = 'SpannerLoadTest'
}

task spannerBenchmark(type: JavaExec) {
    classpath = sourceSets.benchmarkTest.runtimeClasspath
    main = 'SpannerBenchmark'
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact javadocJar
            artifact sourcesJar
            pom {
                name = "gRPC extension library for Google Cloud Library"
                url = 'https://github.com/GoogleCloudPlatform/grpc-gcp-java/tree/master/grpc-gcp'
                afterEvaluate {
                    // description is not available until evaluated.
                    description = project.description
                }

                scm {
                    connection = 'scm:git:https://github.com/GoogleCloudPlatform/grpc-gcp-java.git'
                    url = 'https://github.com/GoogleCloudPlatform/grpc-gcp-java'
                }

                licenses {
                    license {
                        name = 'Apache 2.0'
                        url = 'https://opensource.org/licenses/Apache-2.0'
                    }
                }

                developers {
                    developer {
                        id = "grpc.io"
                        name = "gRPC Contributors"
                        email = "grpc-io@googlegroups.com"
                        url = "https://grpc.io/"
                        organization = "gRPC Authors"
                        organizationUrl = "https://www.google.com"
                    }
                }
            }
        }
    }
}
